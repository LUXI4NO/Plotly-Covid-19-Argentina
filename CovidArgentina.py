# Importar las bibliotecas necesarias
import pandas as pd
import plotly.express as px
import json
import streamlit as st
from PIL import Image

# Configurar la p치gina de Streamlit
st.set_page_config(page_title="Covid 19 en Argentina", page_icon=" 游깵", layout="wide")

# Crear dos columnas en el dise침o de la aplicaci칩n
with st.container():
    text_column, image_column = st.columns((3, 2))
    
    # Columna de la imagen
    with image_column:
        # Cargar y mostrar la imagen
        image = Image.open("img/vacuna.jpg")
        st.image(image, use_column_width=True)

# Columna de texto
with text_column:
    # T칤tulos y bienvenida
    st.write("##")
    st.write("##")
    st.write("##")
    st.markdown("<h1 style='text-align: center; color: #A385FF;'>COVID-19 Insights Argentina: An치lisis Integral y Visualizaci칩n Geoespacial</h1>", unsafe_allow_html=True)
    st.markdown("<h5 style='text-align: center;'>Bienvenido a COVID-19 Insights Argentina, una plataforma interactiva que ofrece un an치lisis detallado y una visualizaci칩n completa de la evoluci칩n de la pandemia de COVID-19 en las provincias de Argentina.</h5>", unsafe_allow_html=True)
    st.markdown("<h5 style='text-align: center;'>A trav칠s de gr치ficos, mapas y tablas informativas, esta aplicaci칩n busca proporcionar una comprensi칩n profunda de la situaci칩n epidemiol칩gica en el pa칤s.</h5>", unsafe_allow_html=True)
    st.markdown("<h5 style='text-align: center;'>Con el objetivo de brindar una experiencia visual enriquecedora, hemos dise침ado una interfaz intuitiva para explorar los datos de COVID-19 en Argentina. 춰Explora y mantente informado!</h5>", unsafe_allow_html=True)

# Cargar el GeoJSON de las Provincias de Argentina
with open('ProvinciasArgentina.geojson') as f:
    geojson_data = json.load(f)

# Cargar los datos de casos desde el archivo CSV
df = pd.read_csv('Casos.CSV', encoding='utf-8')

# Separador visual
st.write("---")
st.write("##")

# Crear un contenedor para organizar el dise침o
with st.container():
    # Dividir el contenedor en cuatro columnas para estad칤sticas clave
    columna_Casos, columna_Muertes, columna_Letalidad, columna_Incidencia = st.columns(4)

    # En la primera columna, mostrar el total de casos
    with columna_Casos:
        st.markdown("""
            <div style='background-color: #A385FF; padding: 0px; border-radius: 10px;'>
                <h3 style='text-align: center;color: white;'>Total de Casos</h3>
                <h2 style='text-align: center;color: white;'>11,275,224</h2>
            </div>
        """, unsafe_allow_html=True)

    # En la segunda columna, mostrar el total de muertes
    with columna_Muertes:
        st.markdown("""
            <div style='background-color: #A385FF; padding: 0px; border-radius: 10px;'>
                <h3 style='text-align: center;color: white;'>Total de Muertos</h3>
                <h2 style='text-align: center;color: white;'>130,463</h2>
            </div>
        """, unsafe_allow_html=True)
    
    # En la tercera columna, mostrar la tasa de letalidad
    with columna_Letalidad:
        st.markdown("""
            <div style='background-color: #A385FF; padding: 0px; border-radius: 10px;'>
                <h3 style='text-align: center;color: white;'>Tasa de Letalidad</h3>
                <h2 style='text-align: center;color: white;'>1.16%</h2>
            </div>
        """, unsafe_allow_html=True)
    
    # En la cuarta columna, mostrar la tasa de incidencia
    with columna_Incidencia:
        st.markdown("""
            <div style='background-color: #A385FF; padding: 0px; border-radius: 10px;'>
                <h3 style="text-align: center; color: white;">Tasa de Incidencia</h3>
                <h2 style='text-align: center; color: white;'>22.225,4</h2>
            </div>
        """, unsafe_allow_html=True)


# Separador visual
st.write("---")

# T칤tulo y descripci칩n del an치lisis geoespacial
st.markdown("<h1 style='text-align: center;'>An치lisis Geoespacial de Casos de COVID-19 en Provincias</h1>", unsafe_allow_html=True)
st.markdown("<p style='text-align: center;'>Explora una visualizaci칩n detallada que muestra la distribuci칩n de casos de COVID-19 en diferentes provincias. Esta aplicaci칩n interactiva ofrece un mapa coropl칠tico que destaca la intensidad de casos, junto con una tabla ordenable y estilizada para examinar los datos en detalle. Obt칠n perspectivas sobre las variaciones y tendencias regionales con esta completa herramienta de an치lisis geoespacial.</p>", unsafe_allow_html=True)

# Expandir la secci칩n de la tabla de clientes y regiones
with st.expander("Tabla de Clientes y Regiones"):
    # Ordenar el DataFrame por la columna 'Casos' de mayor a menor
    df_sorted = df.sort_values(by='Casos', ascending=False)

    # Aplicar estilos al DataFrame ordenado
    styled_df = df_sorted.style \
        .set_properties(**{'text-align': 'center', 'font-size': '12px'}) \
        .format({'Casos': '{:,.0f}','Tasa de incidencia': '{:,.0f}','Muertes': '{:,.0f}','Letalidad': '{:,.2f}'}) \
        .set_table_styles([
            {'selector': 'th', 'props': [('background-color', '#A385FF'), ('color', 'white'), ('font-size', '12px'), ('border', '1px solid #000000')]},
            {'selector': 'td', 'props': [('border', '1px solid #000000'), ('color', '0039A3')]},
            {'selector': 'tr:hover', 'props': [('background-color', '#A385FF'), ('color', 'A385FF')]},  # Cambiado el color de hover
            {'selector': 'tr:nth-child(even)', 'props': [('background-color', '#A385FF'), ('color',  'white')]},
            {'selector': 'tr:nth-child(even)', 'props': [('background-color', '#A385FF')]},
            {'selector': 'td:hover', 'props': [('background-color', '#7547FF'), ('color', 'white')]}
        ])

    # Mostrar la tabla estilizada con Streamlit
    st.table(styled_df)

# Separadores visuales para dar espacio antes de mostrar el mapa
st.write("##")
st.write("##")

# Crear un contenedor para organizar el dise침o
with st.container():
    # Crear el mapa con Plotly Express
    fig = px.choropleth_mapbox(
        df,
        geojson=geojson_data,
        locations='Provincias',
        featureidkey="properties.nombre",
        color='Casos',
        color_continuous_scale="purples",
        mapbox_style="carto-positron",
        zoom=3,
        center={"lat": -39, "lon": -64},
        hover_name='Provincias',
        hover_data={'Casos': True, 'Muertes': True, 'Tasa de incidencia': True, 'Letalidad': True, 'Provincias': False},
    )

    # Actualizar el hovertemplate para incluir informaci칩n sobre muertes
    fig.update_traces(hovertemplate='<b>%{hovertext}</b><br>Casos: %{z:,.0f}<br>Muertes: %{customdata[1]:,.0f}<br>Tasa de incidencia: %{customdata[2]:,.0f}<br>Letalidad: %{customdata[3]:,.2f}')

    # Configuraciones adicionales del mapa
    fig.update_geos(showcountries=True, showcoastlines=True, showland=True, fitbounds="locations", visible=False)
    fig.update_layout(margin={"r": 0, "t": 0, "l": 0, "b": 0}, height=680)

    # Mostrar el mapa en Streamlit
    st.plotly_chart(fig, use_container_width=True)


# Separadores visuales para dar espacio antes de mostrar la visualizaci칩n
st.write("##")
st.write("##")

# Crear un contenedor para organizar el dise침o
with st.container():
    # T칤tulo y descripci칩n de la visualizaci칩n de casos y fallecimientos
    st.markdown("<h1 style='text-align: center;'>Visualizaci칩n de Casos y Fallecimientos de COVID-19 por Provincia en Argentina</h1>", unsafe_allow_html=True)
    st.markdown("<p style='text-align: center;'>Este c칩digo presenta una visualizaci칩n clara y ordenada de las estad칤sticas de COVID-19 en diferentes provincias de Argentina. Dos gr치ficos de barras muestran la evoluci칩n de casos y fallecimientos, respectivamente, presentando la informaci칩n de manera ascendente para una f치cil comparaci칩n.</p>", unsafe_allow_html=True)
    st.write("##")

    # Dividir el contenedor en dos columnas para la tabla y el texto
    tabla_column, text_column = st.columns(2)

    # En la primera columna (tabla), mostrar el gr치fico de barras de casos
    with tabla_column:
        df_sorted = df.sort_values(by='Casos', ascending=True)

        # Crear el gr치fico de barras con Plotly Express para casos
        fig = px.bar(
            df_sorted,
            x='Provincias',
            y='Casos',
            color='Casos',
            color_continuous_scale='algae',
            title='Casos de COVID-19 en Argentina',
            labels={'Casos': 'N칰mero de Casos'},
            text='Casos',  
        )

        # Configuraciones espec칤ficas del gr치fico de casos
        fig.update_traces(
            textfont_size=12, 
            textangle=0, 
            textposition="outside", 
            cliponaxis=False,
            textfont_color='black', 
            texttemplate='%{y:,.0f}', 
            marker_color='#6633FF', 
            marker_line_color='#6633FF'
        )

        fig.update_traces(
            hovertemplate='<b>%{y}</b><br>N칰mero de Casos: %{y:,.0f}<br>',
        )

        # Ajustar el dise침o del gr치fico de casos
        fig.update_layout(
            xaxis_title='N칰mero de Casos',
            yaxis_title='Provincias',
            width=600,
            height=680,
            margin=dict(l=50, r=50, t=50, b=50),
            bargap=0.2,
        )

        # Mostrar el gr치fico de casos en Streamlit
        st.plotly_chart(fig, use_container_width=True)

    # En la segunda columna (texto), mostrar el gr치fico de barras de muertes
    with text_column:
        data_sorted = df.sort_values(by='Muertes', ascending=True)

        # Crear el gr치fico de barras con Plotly Express para muertes
        fig = px.bar(
            data_sorted,
            x='Provincias',
            y='Muertes',
            color='Muertes',
            color_continuous_scale='algae',
            title='Muertes de COVID-19 en Argentina',
            labels={'Muertes': 'N칰mero de Muertes'},
            text='Muertes',  
        )

        # Configuraciones espec칤ficas del gr치fico de muertes
        fig.update_traces(
            textfont_size=12, 
            textangle=0, 
            textposition="outside", 
            cliponaxis=False,
            textfont_color='black', 
            texttemplate='%{y:,.0f}',  
            marker_color='#6633FF', 
            marker_line_color='#6633FF'
        )

        fig.update_traces(
            hovertemplate='<b>%{y}</b><br>N칰mero de Muertes: %{y:,.0f}<br>',
        )

        # Ajustar el dise침o del gr치fico de muertes
        fig.update_layout(
            xaxis_title='N칰mero de Muertes',
            yaxis_title='Provincias',
            width=600,
            height=680,
            margin=dict(l=50, r=50, t=50, b=50),
            bargap=0.2,
        )

        # Mostrar el gr치fico de muertes en Streamlit
        st.plotly_chart(fig, use_container_width=True)

# Separadores visuales para dar espacio antes de mostrar el gr치fico
st.write("##")
st.write("##")

# Crear un contenedor para organizar el dise침o
with st.container():       
    # T칤tulo y descripci칩n de la evoluci칩n temporal de casos y muertes
    st.markdown("<h1 style='text-align: center;'>Evoluci칩n Temporal de Casos y Muertes por COVID-19 en Argentina</h1>", unsafe_allow_html=True)
    st.markdown("<p style='text-align: center;'>Representaci칩n visual de la evoluci칩n temporal de los casos y muertes por COVID-19 en Argentina. Se trata de un gr치fico de l칤neas interactivo que facilita la exploraci칩n de la progresi칩n de la enfermedad a lo largo del tiempo. En el eje x se presentan las fechas, mientras que en el eje y se representa el n칰mero de casos y muertes. Este enfoque proporciona una visi칩n clara y detallada de c칩mo la situaci칩n ha evolucionado en el pa칤s.</p>", unsafe_allow_html=True)
   
    # Cargar datos para la evoluci칩n temporal desde un archivo CSV
    data = pd.read_csv('tiempo.csv', encoding='utf-8')
    df_melted = data.melt(id_vars=['Tipo'], var_name='Fecha', value_name='Cantidad')

    # Asignar colores personalizados
    color_map = {'Casos': '#A385FF', 'Muertes': '#6633FF'}
    
    # Crear un gr치fico lineal con Plotly Express
    fig = px.line(df_melted, x='Fecha', y='Cantidad', color='Tipo', markers=True, title='Casos y Muertes a lo largo del tiempo',
                labels={'Cantidad': 'Cantidad Total', 'Fecha': 'Fecha', 'Tipo': 'Tipo'},
                color_discrete_map=color_map)  

    # Personalizar el dise침o y la est칠tica del gr치fico
    fig.update_layout(
        xaxis_title_font=dict(size=14, color='Black'),
        yaxis_title_font=dict(size=14, color='Black'),
        title_font=dict(size=20, color='black'), 
        font=dict(family="Arial, sans-serif", size=12, color="black"),
        legend=dict(title=dict(text='Casos y Fallecimientos', font=dict(size=12))),
    )

    # Personalizar las trazas
    fig.update_traces(
        line=dict(width=2),  
        hovertemplate='%{y}',  
        hoverinfo='y+y',  
    )

    # Mostrar el gr치fico en Streamlit
    st.plotly_chart(fig, use_container_width=True)

# Separadores visuales para dar espacio antes de mostrar los gr치ficos
st.write("##")
st.write("##")

# Crear un contenedor para organizar el dise침o
with st.container():
    # T칤tulo y descripci칩n de la tasa de incidencia y letalidad
    st.markdown("<h1 style='text-align: center;'>Tasa de Incidencia y Letalidad del COVID-19 por Provincia en Argentina</h1>", unsafe_allow_html=True)
    st.markdown("<p style='text-align: center;'>Visualizaciones informativas sobre la Tasa de Incidencia y la Letalidad del COVID-19 en diferentes provincias de Argentina. Dos gr치ficos circulares (pie charts) ofrecen una perspectiva clara y concisa de la distribuci칩n de estas m칠tricas esenciales. El primer gr치fico destaca la provincia con la mayor Tasa de Incidencia, mientras que el segundo identifica la provincia con la mayor Letalidad.</p>", unsafe_allow_html=True)
    st.write("##")

    # Dividir el contenedor en dos columnas para los gr치ficos
    tabla_column, text_column = st.columns(2)

    # En la primera columna (izquierda), mostrar el gr치fico de tasa de incidencia
    with text_column:
        # Crear el gr치fico circular (pie chart) con Plotly Express para tasa de incidencia
        fig = px.pie(
            df,
            values='Tasa de incidencia',
            names='Provincias',
            color_discrete_sequence=px.colors.sequential.Purples,
            title='Provincia con M치s Tasa de Incidencia de COVID-19 en Argentina',
            hover_data=['Tasa de incidencia'],
            labels={'Tasa de incidencia': 'N칰mero de Tasa de Incidencia'},
            hole=0.5,
        )

        # Configuraciones espec칤ficas del gr치fico de tasa de incidencia
        fig.update_traces(textposition='inside', textinfo='percent+label')

        # Ajustar el dise침o del gr치fico de tasa de incidencia
        fig.update_layout(
            width=800,
            height=500,
            margin=dict(t=40, b=60),
            showlegend=True,
            legend=dict(x=1, y=0.5),
        )

        # Personalizar la paleta de colores
        fig.update_traces(marker=dict(line=dict(color='#ffffff', width=1)))

        # Personalizar el cuadro emergente al pasar el mouse
        fig.update_traces(
            hovertemplate='<b>%{label}</b><br>Tasa de Incidencia: %{percent}<br>',
        )

        # Mostrar el gr치fico de tasa de incidencia en Streamlit
        st.plotly_chart(fig, use_container_width=True)

    # En la segunda columna (derecha), mostrar el gr치fico de letalidad
    with tabla_column:
        # Crear el gr치fico circular (pie chart) con Plotly Express para letalidad
        fig = px.pie(
            df,
            values='Letalidad',
            names='Provincias',
            color_discrete_sequence=px.colors.sequential.Purples,
            title='Provincia con M치s Letalidad de COVID-19 en Argentina',
            hover_data=['Letalidad'],
            labels={'Letalidad': 'N칰mero de Letalidad'},
            hole=0.5,
        )

        # Configuraciones espec칤ficas del gr치fico de letalidad
        fig.update_traces(textposition='inside', textinfo='percent+label')

        # Ajustar el dise침o del gr치fico de letalidad
        fig.update_layout(
            width=800,
            height=500,
            margin=dict(t=40, b=60),
            legend=dict(x=1, y=0.5),
        )

        # Personalizar la paleta de colores
        fig.update_traces(marker=dict(line=dict(color='#ffffff', width=1)))

        # Personalizar el cuadro emergente al pasar el mouse
        fig.update_traces(
            hovertemplate='<b>%{label}</b><br>Letalidad: %{percent}<br>')

        # Mostrar el gr치fico de letalidad en Streamlit
        st.plotly_chart(fig, use_container_width=True)


# Separadores visuales para dar espacio antes de mostrar el gr치fico
st.write("##")
st.write("##")

# Crear un contenedor para organizar el dise침o
with st.container():
    # T칤tulo y descripci칩n de la relaci칩n entre tasa de incidencia y letalidad
    st.markdown("<h1 style='text-align: center;'>Relaci칩n entre Tasa de Incidencia y Letalidad por Provincia en Argentina</h1>", unsafe_allow_html=True)
    st.markdown("<p style='text-align: center;'>La visualizaci칩n presenta un gr치fico de dispersi칩n que analiza la relaci칩n entre la Tasa de Incidencia y la Letalidad por provincia en Argentina. Cada punto en el gr치fico representa una provincia, donde el eje x representa la Tasa de Incidencia y el eje y representa la Letalidad. El tama침o de los marcadores indica la magnitud de la relaci칩n entre estas dos m칠tricas cr칤ticas.</p>", unsafe_allow_html=True)

    # Crear el gr치fico de dispersi칩n con Plotly Express
    fig = px.scatter(df, x="Tasa de incidencia", y="Letalidad", text="Provincias",
                    labels={"Tasa de incidencia": "N칰mero de Tasa de Incidencia", "Letalidad": "N칰mero de Letalidad"},
                    hover_name="Provincias", color_discrete_sequence=["#A385FF"], size_max=50)

    # Personalizar el dise침o y estilo del gr치fico
    fig.update_traces(marker=dict(size=12, line=dict(width=2, color='DarkSlateGray')),
                    textposition='top center', textfont_size=9)

    fig.update_layout(
                    xaxis_title='N칰mero de Tasa de Incidencia',
                    yaxis_title='N칰mero de Letalidad',
                    showlegend=False)

    # Personalizar la informaci칩n que aparece al pasar el mouse sobre los puntos
    fig.update_traces(hovertemplate='<b>%{hovertext}</b><br>Tasa de Incidencia: %{x:,.0f}<br>Letalidad: %{y:,.2f}')

    # Mostrar el gr치fico en Streamlit
    st.plotly_chart(fig, use_container_width=True)

